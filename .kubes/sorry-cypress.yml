---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    kubernetes.io/metadata.name: sorry-cypress
  name: sorry-cypress

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: api
  name: api
  namespace: sorry-cypress
spec:
  type: NodePort
  ports:
    - name: http
      port: 4000
      protocol: TCP
      nodePort: 4000
      targetPort: 4000
  selector:
    app.kubernetes.io/name: api
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: dashboard
  name: dashboard
  namespace: sorry-cypress
spec: 
  type: NodePort
  ports:
    - name: http
      port: 8080
      protocol: TCP
      nodePort: 8080
      targetPort: 8080
  selector:
    app.kubernetes.io/name: dashboard
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: storage
  name: storage
  namespace: sorry-cypress
spec: 
  type: NodePort
  ports:
    - name: console
      port: 9000
      protocol: TCP
      nodePort: 9000
      targetPort: 9000
    - name: http
      port: 9090
      protocol: TCP
      nodePort: 9090
      targetPort: 9090
  selector:
    app.kubernetes.io/name: storage
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: director
  name: director
  namespace: sorry-cypress
spec:
  type: NodePort
  ports:
    - name: http
      port: 1234
      protocol: TCP
      nodePort: 1234
      targetPort: 1234
  selector:
    app.kubernetes.io/name: director
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: mongo
  name: mongo
  namespace: sorry-cypress
spec:
  type: NodePort
  ports:
    - name: "mongodb"
      port: 27017
      protocol: TCP
      nodePort: 27017
      targetPort: 27017
  selector:
    app.kubernetes.io/name: mongo
status:
  loadBalancer: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: api
  name: api
  namespace: sorry-cypress
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: api
  strategy: {}
  template:
    metadata:
      labels:
        network.kubernetes.io/sorry-cypress: "true"
        app.kubernetes.io/name: api
    spec:
      containers:
        - env:
            - name: APOLLO_PLAYGROUND
              value: "false"
            - name: MONGODB_DATABASE
              value: sorry-cypress
            - name: MONGODB_URI
              value: mongodb://sorry-cypress:cypress-sorry@mongo:27017
          name: api
          image: agoldis/sorry-cypress-api:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 4000
          resources: {}
          readinessProbe:
            httpGet:
              path: /.well-known/apollo/server-health
              port: 4000
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 2
            failureThreshold: 5
      restartPolicy: Always
status: {}

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: sorry-cypress
  namespace: sorry-cypress
spec:
  ingress:
    - from:
        - podSelector:
            matchLabels:
              network.kubernetes.io/sorry-cypress: "true"
  podSelector:
    matchLabels:
      network.kubernetes.io/sorry-cypress: "true"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: createbuckets
  name: createbuckets
  namespace: sorry-cypress
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: createbuckets
  strategy: {}
  template:
    metadata:
      labels:
        network.kubernetes.io/sorry-cypress: "true"
        app.kubernetes.io/name: createbuckets
    spec:
      containers:
        - command:
            - /bin/sh
            - -c
            - ' sleep 3; /usr/bin/mc config host add myminio http://storage:9000 sorry-cypress cypress-sorry; /usr/bin/mc rm -r --dangerous --force myminio/sorry-cypress; /usr/bin/mc mb myminio/sorry-cypress; /usr/bin/mc anonymous set download myminio/sorry-cypress; /usr/bin/mc anonymous set public myminio/sorry-cypress; exit 0; '
          name: createbuckets
          image: minio/mc
          imagePullPolicy: Always
          resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: dashboard
  name: dashboard
  namespace: sorry-cypress
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: dashboard
  strategy: {}
  template:
    metadata:
      labels:
        network.kubernetes.io/sorry-cypress: "true"
        app.kubernetes.io/name: dashboard
    spec:
      containers:
        - env:
            - name: CI_URL
              value: ""
            - name: GRAPHQL_CLIENT_CREDENTIALS
              value: ""
            - name: GRAPHQL_SCHEMA_URL
              value: http://docker.local:4000
            - name: PORT
              value: "8080"
          name: dashboard
          image: agoldis/sorry-cypress-dashboard:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          resources: {}
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 2
            failureThreshold: 5
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: director
  name: director
  namespace: sorry-cypress
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: director
  strategy: {}
  template:
    metadata:
      labels:
        network.kubernetes.io/sorry-cypress: "true"
        app.kubernetes.io/name: director
    spec:
      containers:
        - env:
            - name: ALLOWED_KEYS
              value: secret_key
            - name: DASHBOARD_URL
              value: http://docker.local:8080
            - name: EXECUTION_DRIVER
              value: ../execution/mongo/driver
            - name: GITLAB_JOB_RETRIES
              value: "false"
            - name: INACTIVITY_TIMEOUT_SECONDS
              value: "600"
            - name: MINIO_ACCESS_KEY
              value: sorry-cypress
            - name: MINIO_BUCKET
              value: sorry-cypress
            - name: MINIO_ENDPOINT
              value: storage
            - name: MINIO_PORT
              value: "9000"
            - name: MINIO_SECRET_KEY
              value: cypress-sorry
            - name: MINIO_URL
              value: http://docker.local
            - name: MINIO_USESSL
              value: "false"
            - name: MONGODB_DATABASE
              value: sorry-cypress
            - name: MONGODB_URI
              value: mongodb://sorry-cypress:cypress-sorry@mongo:27017
            - name: PROBE_LOGGER
              value: "false"
            - name: SCREENSHOTS_DRIVER
              value: ../screenshots/minio.driver
          name: director
          image: agoldis/sorry-cypress-director:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 1234
          resources: {}
          readinessProbe:
            httpGet:
              path: /health-check-db
              port: 1234
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 2
            failureThreshold: 5
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: mongo
  name: mongo
  namespace: sorry-cypress
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mongo
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        network.kubernetes.io/sorry-cypress: "true"
        app.kubernetes.io/name: mongo
    spec:
      containers:
        - env:
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: cypress-sorry
            - name: MONGO_INITDB_ROOT_USERNAME
              value: sorry-cypress
          name: mongo
          image: mongo:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 27017
          resources: {}
          volumeMounts:
            - mountPath: /data/db
              name: mongo-claim
      restartPolicy: Always
      volumes:
        - name: mongo-claim
          persistentVolumeClaim:
            claimName: mongo-claim
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app.kubernetes.io/name: mongo-claim
  name: mongo-claim
  namespace: sorry-cypress
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: storage
  name: storage
  namespace: sorry-cypress
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: storage
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        network.kubernetes.io/sorry-cypress: "true"
        app.kubernetes.io/name: storage
    spec:
      containers:
        - args:
            - minio
            - server
            - --console-address
            - :9090
            - /data
          env:
            - name: MINIO_ROOT_PASSWORD
              value: cypress-sorry
            - name: MINIO_ROOT_USER
              value: sorry-cypress
          name: storage
          image: minio/minio
          imagePullPolicy: Always
          ports:
            - containerPort: 9000
            - containerPort: 9090
          resources: {}
          volumeMounts:
            - mountPath: /data
              name: storage-claim
      restartPolicy: Always
      volumes:
        - name: storage-claim
          persistentVolumeClaim:
            claimName: storage-claim
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app.kubernetes.io/name: storage-claim
  name: storage-claim
  namespace: sorry-cypress
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
status: {}
